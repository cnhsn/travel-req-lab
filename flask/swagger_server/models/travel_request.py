# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TravelRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, request_name: str=None, destination: str=None, start_date: date=None, end_date: date=None, duration: int=None, purpose: str=None, employee: str=None, total_expenses: float=None, account_name: str=None):  # noqa: E501
        """TravelRequest - a model defined in Swagger

        :param request_name: The request_name of this TravelRequest.  # noqa: E501
        :type request_name: str
        :param destination: The destination of this TravelRequest.  # noqa: E501
        :type destination: str
        :param start_date: The start_date of this TravelRequest.  # noqa: E501
        :type start_date: date
        :param end_date: The end_date of this TravelRequest.  # noqa: E501
        :type end_date: date
        :param duration: The duration of this TravelRequest.  # noqa: E501
        :type duration: int
        :param purpose: The purpose of this TravelRequest.  # noqa: E501
        :type purpose: str
        :param employee: The employee of this TravelRequest.  # noqa: E501
        :type employee: str
        :param total_expenses: The total_expenses of this TravelRequest.  # noqa: E501
        :type total_expenses: float
        :param account_name: The account_name of this TravelRequest.  # noqa: E501
        :type account_name: str
        """
        self.swagger_types = {
            'request_name': str,
            'destination': str,
            'start_date': date,
            'end_date': date,
            'duration': int,
            'purpose': str,
            'employee': str,
            'total_expenses': float,
            'account_name': str
        }

        self.attribute_map = {
            'request_name': 'requestName',
            'destination': 'destination',
            'start_date': 'startDate',
            'end_date': 'endDate',
            'duration': 'duration',
            'purpose': 'purpose',
            'employee': 'employee',
            'total_expenses': 'totalExpenses',
            'account_name': 'accountName'
        }
        self._request_name = request_name
        self._destination = destination
        self._start_date = start_date
        self._end_date = end_date
        self._duration = duration
        self._purpose = purpose
        self._employee = employee
        self._total_expenses = total_expenses
        self._account_name = account_name

    @classmethod
    def from_dict(cls, dikt) -> 'TravelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TravelRequest of this TravelRequest.  # noqa: E501
        :rtype: TravelRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_name(self) -> str:
        """Gets the request_name of this TravelRequest.


        :return: The request_name of this TravelRequest.
        :rtype: str
        """
        return self._request_name

    @request_name.setter
    def request_name(self, request_name: str):
        """Sets the request_name of this TravelRequest.


        :param request_name: The request_name of this TravelRequest.
        :type request_name: str
        """

        self._request_name = request_name

    @property
    def destination(self) -> str:
        """Gets the destination of this TravelRequest.


        :return: The destination of this TravelRequest.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination: str):
        """Sets the destination of this TravelRequest.


        :param destination: The destination of this TravelRequest.
        :type destination: str
        """

        self._destination = destination

    @property
    def start_date(self) -> date:
        """Gets the start_date of this TravelRequest.


        :return: The start_date of this TravelRequest.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date: date):
        """Sets the start_date of this TravelRequest.


        :param start_date: The start_date of this TravelRequest.
        :type start_date: date
        """

        self._start_date = start_date

    @property
    def end_date(self) -> date:
        """Gets the end_date of this TravelRequest.


        :return: The end_date of this TravelRequest.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date: date):
        """Sets the end_date of this TravelRequest.


        :param end_date: The end_date of this TravelRequest.
        :type end_date: date
        """

        self._end_date = end_date

    @property
    def duration(self) -> int:
        """Gets the duration of this TravelRequest.


        :return: The duration of this TravelRequest.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration: int):
        """Sets the duration of this TravelRequest.


        :param duration: The duration of this TravelRequest.
        :type duration: int
        """

        self._duration = duration

    @property
    def purpose(self) -> str:
        """Gets the purpose of this TravelRequest.


        :return: The purpose of this TravelRequest.
        :rtype: str
        """
        return self._purpose

    @purpose.setter
    def purpose(self, purpose: str):
        """Sets the purpose of this TravelRequest.


        :param purpose: The purpose of this TravelRequest.
        :type purpose: str
        """

        self._purpose = purpose

    @property
    def employee(self) -> str:
        """Gets the employee of this TravelRequest.


        :return: The employee of this TravelRequest.
        :rtype: str
        """
        return self._employee

    @employee.setter
    def employee(self, employee: str):
        """Sets the employee of this TravelRequest.


        :param employee: The employee of this TravelRequest.
        :type employee: str
        """

        self._employee = employee

    @property
    def total_expenses(self) -> float:
        """Gets the total_expenses of this TravelRequest.


        :return: The total_expenses of this TravelRequest.
        :rtype: float
        """
        return self._total_expenses

    @total_expenses.setter
    def total_expenses(self, total_expenses: float):
        """Sets the total_expenses of this TravelRequest.


        :param total_expenses: The total_expenses of this TravelRequest.
        :type total_expenses: float
        """

        self._total_expenses = total_expenses

    @property
    def account_name(self) -> str:
        """Gets the account_name of this TravelRequest.


        :return: The account_name of this TravelRequest.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name: str):
        """Sets the account_name of this TravelRequest.


        :param account_name: The account_name of this TravelRequest.
        :type account_name: str
        """

        self._account_name = account_name
